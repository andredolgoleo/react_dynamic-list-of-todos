{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","handleOnSelectedTodo","currentTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","handleFilterTodos","handleQueryFilter","useState","value","setValue","onChange","event","currentTarget","placeholder","style","pointerEvents","Loader","wait","delay","Promise","resolve","setTimeout","get","url","fullURL","then","fetch","res","json","TodoModal","selectedTodo","clearState","selectedUser","setSelectedUser","useEffect","userId","href","email","name","App","setSelectedTodo","setTodos","filterBy","setFilterBy","query","setQuery","filterTodos","filter","todoItem","toLowerCase","includes","queryName","nameOfFilter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe81018d.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleOnSelectedTodo: (todo: Todo) => void,\n  currentTodo: Todo | null\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleOnSelectedTodo,\n  currentTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr key={todo.id} data-cy=\"todo\">\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed ? (\n            <td className=\"is-vcentered\">\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </td>\n          ) : (\n            <td className=\"is-vcentered\" />\n          )}\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed ? (\n              'has-text-success'\n            ) : (\n              'has-text-danger'\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {currentTodo?.id === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleOnSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { useState } from 'react';\n\ntype Props = {\n  handleFilterTodos: (nameOfFilter: string) => void,\n  handleQueryFilter: (query: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleFilterTodos,\n  handleQueryFilter,\n}) => {\n  const [value, setValue] = useState('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => handleFilterTodos(event.currentTarget.value)}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={(event) => {\n            handleQueryFilter(event.currentTarget.value);\n            setValue(event.currentTarget.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {value && (\n            <button\n              aria-label=\"clearSearchButton\"\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                handleQueryFilter('');\n                setValue('');\n              }}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  wait(300);\n\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number) => {\n  wait(300);\n\n  return get<User>(`/users/${userId}`);\n};\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  clearState: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, clearState }) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(res => setSelectedUser(res));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!selectedUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => clearState()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className={selectedTodo.completed ? (\n                  'has-text-success'\n                ) : (\n                  'has-text-danger'\n                )}\n                >\n                  Planned\n                </strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${selectedUser.email}`}>\n                {selectedUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterBy, setFilterBy] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then(res => setTodos(res));\n  }, []);\n\n  const handleOnSelectedTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const clearState = () => {\n    return (\n      setSelectedTodo(null)\n    );\n  };\n\n  const handleFilterTodos = (nameOfFilter: string) => {\n    setFilterBy(nameOfFilter);\n  };\n\n  const handleQueryFilter = (queryName: string) => setQuery(queryName);\n\n  const lowerText = (str: string) => (\n    str.toLowerCase().includes(query.toLowerCase())\n  );\n\n  const filterTodos = todos\n    .filter(todoItem => {\n      if (filterBy === 'active') {\n        return !todoItem.completed;\n      }\n\n      if (filterBy === 'completed') {\n        return todoItem.completed;\n      }\n\n      return todoItem;\n    })\n    .filter(todoItem => (\n      lowerText(todoItem.title)\n    ));\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                handleQueryFilter={handleQueryFilter}\n                handleFilterTodos={handleFilterTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                handleOnSelectedTodo={handleOnSelectedTodo}\n                todos={filterTodos}\n                currentTodo={selectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal clearState={clearState} selectedTodo={selectedTodo} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}